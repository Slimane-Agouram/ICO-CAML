    
    .data	
nl:
    .asciiz "\n"
    .align 2
allocs:
    .asciiz "Alloc: "
    .align 2
Glob:
    .space 0
    .align 2
Mem:
    .space 16000    
    .text
    .globl __start
    .align 2

print_int:
    li  $v0, 1
    syscall 
    j   $ra
println_int:
    li  $v0, 1
    syscall 
    la  $a0, nl
    li  $v0, 4
    syscall
    j   $ra
read_int:
    li  $v0, 5
    syscall 
    j   $ra
alloc:
    sw  $a0, ($fp)              
    sll $a0, $a0, 2
    addu $v0, $fp, 4
    addu $fp, $v0, $a0
    j   $ra

__start:
    la    $fp, Mem
    la    $gp, Glob
    jal  main
    li    $v0, 10
    syscall


    
#FUNSTART g
    g_f=0
g:
    add  $v0, $a0, $a1
g_end:
    j    $ra
    
#FUNSTART f
    f_f=24
f:
    subu $sp, $sp, f_f
    sw   $ra, 0($sp) # store $145
    sw   $s0, 4($sp) # store $146
    sw   $s1, 8($sp) # store $147
    sw   $s2, 12($sp) # store $148
    sw   $s3, 16($sp) # store $149
    sw   $s4, 20($sp) # store $150
    move $s0, $a0
    move $a0, $s0
    li   $a1, 1
    jal  g
    move $s1, $v0
    move $a0, $s0
    li   $a1, 2
    jal  g
    move $s2, $v0
    move $a0, $s0
    li   $a1, 3
    jal  g
    move $s3, $v0
    move $a0, $s0
    li   $a1, 4
    jal  g
    move $s4, $v0
    move $a0, $s0
    li   $a1, 5
    jal  g
    sub  $a0, $s4, $v0
    sub  $a0, $s3, $a0
    sub  $a0, $s2, $a0
    sub  $v0, $s1, $a0
f_end:
    lw   $ra, 0($sp) # load  $145
    lw   $s0, 4($sp) # load  $146
    lw   $s1, 8($sp) # load  $147
    lw   $s2, 12($sp) # load  $148
    lw   $s3, 16($sp) # load  $149
    lw   $s4, 20($sp) # load  $150
    addu $sp, $sp, f_f
    j    $ra
    
#FUNSTART h
    h_f=12
h:
    subu $sp, $sp, h_f
    sw   $ra, 0($sp) # store $157
    sw   $s0, 4($sp) # store $158
    sw   $s1, 8($sp) # store $159
    move $s1, $a0
    move $a0, $s1
    li   $a1, 4
    jal  g
    move $s0, $v0
    move $a0, $s1
    li   $a1, 5
    jal  g
    sub  $s0, $s0, $v0
    move $a0, $s1
    li   $a1, 3
    jal  g
    sub  $s0, $v0, $s0
    move $a0, $s1
    li   $a1, 2
    jal  g
    sub  $s0, $v0, $s0
    move $a0, $s1
    li   $a1, 1
    jal  g
    sub  $s0, $v0, $s0
    move $v0, $s0
h_end:
    lw   $ra, 0($sp) # load  $157
    lw   $s0, 4($sp) # load  $158
    lw   $s1, 8($sp) # load  $159
    addu $sp, $sp, h_f
    j    $ra
    
#FUNSTART k
    k_f=12
k:
    subu $sp, $sp, k_f
    sw   $ra, 0($sp) # store $166
    sw   $s0, 4($sp) # store $167
    sw   $s1, 8($sp) # store $168
    move $s0, $a0
    move $a0, $s0
    li   $a1, 1
    jal  g
    move $s1, $v0
    move $a0, $s0
    li   $a1, 2
    jal  g
    sub  $a1, $zero, $v0
    add  $s1, $a1, $s1
    move $a0, $s0
    li   $a1, 3
    jal  g
    add  $s1, $v0, $s1
    move $a0, $s0
    li   $a1, 4
    jal  g
    sub  $a1, $zero, $v0
    add  $s1, $a1, $s1
    move $a0, $s0
    li   $a1, 5
    jal  g
    add  $s1, $v0, $s1
    move $v0, $s1
k_end:
    lw   $ra, 0($sp) # load  $166
    lw   $s0, 4($sp) # load  $167
    lw   $s1, 8($sp) # load  $168
    addu $sp, $sp, k_f
    j    $ra
    
#FUNSTART main
    main_f=4
main:
    subu $sp, $sp, main_f
    sw   $ra, 0($sp) # store $177
    li   $a0, 10
    jal  f
    move $a0, $v0
    jal  println_int
    li   $a0, 10
    jal  h
    move $a0, $v0
    jal  println_int
    li   $a0, 10
    jal  k
    move $a0, $v0
    jal  println_int
main_end:
    lw   $ra, 0($sp) # load  $177
    addu $sp, $sp, main_f
    j    $ra
